<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use src\model;	

	class Elemento_conteudosOutput implements \JsonSerializable {
			
		private $id;
		private $elemento_conteudo;
		private $ordem;
		private $cadastrado;
		private $modificado;
		private $elementosOutput;
		private $situacoes_registrosOutput;
		private $tipos_alinhamentos_horizontaisOutput;
		private $tipos_alinhamentos_verticaisOutput;
			
		public function __construct() { }
					
		public function getId() {
			return $this->id;
		}
		
		public function setId($id) {
			$this->id = $id;
		}
					
		public function getElemento_conteudo() {
			return $this->elemento_conteudo;
		}
		
		public function setElemento_conteudo($elemento_conteudo) {
			$this->elemento_conteudo = $elemento_conteudo;
		}
					
		public function getOrdem() {
			return $this->ordem;
		}
		
		public function setOrdem($ordem) {
			$this->ordem = $ordem;
		}
					
		public function getCadastrado() {
			return $this->cadastrado;
		}
		
		public function setCadastrado($cadastrado) {
			$this->cadastrado = $cadastrado;
		}
					
		public function getModificado() {
			return $this->modificado;
		}
		
		public function setModificado($modificado) {
			$this->modificado = $modificado;
		}
					
		public function getElementosOutput() {
			return $this->elementosOutput;
		}
		
		public function setElementosOutput($elementosOutput) {
			$this->elementosOutput = $elementosOutput;
		}
					
		public function getSituacoes_registrosOutput() {
			return $this->situacoes_registrosOutput;
		}
		
		public function setSituacoes_registrosOutput($situacoes_registrosOutput) {
			$this->situacoes_registrosOutput = $situacoes_registrosOutput;
		}
					
		public function getTipos_alinhamentos_horizontaisOutput() {
			return $this->tipos_alinhamentos_horizontaisOutput;
		}
		
		public function setTipos_alinhamentos_horizontaisOutput($tipos_alinhamentos_horizontaisOutput) {
			$this->tipos_alinhamentos_horizontaisOutput = $tipos_alinhamentos_horizontaisOutput;
		}
					
		public function getTipos_alinhamentos_verticaisOutput() {
			return $this->tipos_alinhamentos_verticaisOutput;
		}
		
		public function setTipos_alinhamentos_verticaisOutput($tipos_alinhamentos_verticaisOutput) {
			$this->tipos_alinhamentos_verticaisOutput = $tipos_alinhamentos_verticaisOutput;
		}

		public function getOutput($elemento_conteudos) {
			if (!is_null($elemento_conteudos)) {
				$elemento_conteudosOutput = new model\Elemento_conteudosOutput();
				$elemento_conteudosOutput->setId($elemento_conteudos->getId());
				$elemento_conteudosOutput->setElemento_conteudo($elemento_conteudos->getElemento_conteudo());
				$elemento_conteudosOutput->setOrdem($elemento_conteudos->getOrdem());
				$elementosOutput = new model\ElementosOutput();
				$elemento_conteudosOutput->setElementosOutput($elementosOutput->getOutput($elemento_conteudos->getElementos()));
				$situacoes_registrosOutput = new model\Situacoes_registrosOutput();
				$elemento_conteudosOutput->setSituacoes_registrosOutput($situacoes_registrosOutput->getOutput($elemento_conteudos->getSituacoes_registros()));
				$tipos_alinhamentos_horizontaisOutput = new model\Tipos_alinhamentos_horizontaisOutput();
				$elemento_conteudosOutput->setTipos_alinhamentos_horizontaisOutput($tipos_alinhamentos_horizontaisOutput->getOutput($elemento_conteudos->getTipos_alinhamentos_horizontais()));
				$tipos_alinhamentos_verticaisOutput = new model\Tipos_alinhamentos_verticaisOutput();
				$elemento_conteudosOutput->setTipos_alinhamentos_verticaisOutput($tipos_alinhamentos_verticaisOutput->getOutput($elemento_conteudos->getTipos_alinhamentos_verticais()));
				return $elemento_conteudosOutput;
			} else {
				return null;
			}
		}
			
		public function getOutputList($elemento_conteudosList) {
			$elemento_conteudosOutputList = array();
			$count = NUMBER_ZERO;
			for ($x = NUMBER_ZERO; $x < sizeof($elemento_conteudosList); $x++) {
				$elemento_conteudosOutputList[$count] = $this->getOutput($elemento_conteudosList[$x]);
				$count++;
			}
			return $elemento_conteudosOutputList;
		}
		
		public function jsonSerialize() {
			$objectVars = get_object_vars($this);
			return array_filter($objectVars, function ($value) { 
				return $value != null;
			});
		}		
		
	}
	
?>