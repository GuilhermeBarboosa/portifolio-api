<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use lib\getz;
	use src\model;

	class Elemento_conteudosInput extends getz\Inject {
			
		private $id;
		private $elemento_conteudo;
		private $ordem;
		private $cadastrado;
		private $modificado;
		private $elementosInput;
		private $situacoes_registrosInput;
		private $tipos_alinhamentos_horizontaisInput;
		private $tipos_alinhamentos_verticaisInput;
			
		private $error;	
			
		public function __construct($request) { 
			if (isset($request[ID])) {
				$this->id = $this->inject($request[ID]);	
			}
			if (isset($request[ELEMENTO_CONTEUDO])) {
				$this->elemento_conteudo = $this->inject($request[ELEMENTO_CONTEUDO]);	
			}
			if (isset($request[ORDEM])) {
				$this->ordem = $this->inject($request[ORDEM]);	
			}
			if (isset($request[CADASTRADO])) {
				$this->cadastrado = $this->inject($request[CADASTRADO]);	
			}
			if (isset($request[MODIFICADO])) {
				$this->modificado = $this->inject($request[MODIFICADO]);	
			}
			if (isset($request[ELEMENTOS_INPUT]) && isset($request[ELEMENTOS_INPUT][ID])) {
				$elementosInput = new model\ElementosInput($request[ELEMENTOS_INPUT]);
				$this->elementosInput = $elementosInput;	
			}
			if (isset($request[SITUACOES_REGISTROS_INPUT]) && isset($request[SITUACOES_REGISTROS_INPUT][ID])) {
				$situacoes_registrosInput = new model\Situacoes_registrosInput($request[SITUACOES_REGISTROS_INPUT]);
				$this->situacoes_registrosInput = $situacoes_registrosInput;	
			}
			if (isset($request[TIPOS_ALINHAMENTOS_HORIZONTAIS_INPUT]) && isset($request[TIPOS_ALINHAMENTOS_HORIZONTAIS_INPUT][ID])) {
				$tipos_alinhamentos_horizontaisInput = new model\Tipos_alinhamentos_horizontaisInput($request[TIPOS_ALINHAMENTOS_HORIZONTAIS_INPUT]);
				$this->tipos_alinhamentos_horizontaisInput = $tipos_alinhamentos_horizontaisInput;	
			}
			if (isset($request[TIPOS_ALINHAMENTOS_VERTICAIS_INPUT]) && isset($request[TIPOS_ALINHAMENTOS_VERTICAIS_INPUT][ID])) {
				$tipos_alinhamentos_verticaisInput = new model\Tipos_alinhamentos_verticaisInput($request[TIPOS_ALINHAMENTOS_VERTICAIS_INPUT]);
				$this->tipos_alinhamentos_verticaisInput = $tipos_alinhamentos_verticaisInput;	
			}
		}
					
		public function getId() {
			return $this->id;
		}
		
		public function setId($id) {
			$this->id = $id;
		}
					
		public function getElemento_conteudo() {
			return $this->elemento_conteudo;
		}
		
		public function setElemento_conteudo($elemento_conteudo) {
			$this->elemento_conteudo = $elemento_conteudo;
		}
					
		public function getOrdem() {
			return $this->ordem;
		}
		
		public function setOrdem($ordem) {
			$this->ordem = $ordem;
		}
					
		public function getCadastrado() {
			return $this->cadastrado;
		}
		
		public function setCadastrado($cadastrado) {
			$this->cadastrado = $cadastrado;
		}
					
		public function getModificado() {
			return $this->modificado;
		}
		
		public function setModificado($modificado) {
			$this->modificado = $modificado;
		}
					
		public function getElementosInput() {
			return $this->elementosInput;
		}
		
		public function setElementosInput($elementosInput) {
			$this->elementosInput = $elementosInput;
		}
					
		public function getSituacoes_registrosInput() {
			return $this->situacoes_registrosInput;
		}
		
		public function setSituacoes_registrosInput($situacoes_registrosInput) {
			$this->situacoes_registrosInput = $situacoes_registrosInput;
		}
					
		public function getTipos_alinhamentos_horizontaisInput() {
			return $this->tipos_alinhamentos_horizontaisInput;
		}
		
		public function setTipos_alinhamentos_horizontaisInput($tipos_alinhamentos_horizontaisInput) {
			$this->tipos_alinhamentos_horizontaisInput = $tipos_alinhamentos_horizontaisInput;
		}
					
		public function getTipos_alinhamentos_verticaisInput() {
			return $this->tipos_alinhamentos_verticaisInput;
		}
		
		public function setTipos_alinhamentos_verticaisInput($tipos_alinhamentos_verticaisInput) {
			$this->tipos_alinhamentos_verticaisInput = $tipos_alinhamentos_verticaisInput;
		}	
			
		public function getError() {
			return $this->error;
		}
		
		private function setError($error) {
			$this->error = $error;
		}	

		public function isValid($method) {		
			if ($method == POST) {
				if (is_null($this->elemento_conteudo) || empty($this->elemento_conteudo)) {
					$this->setError(THE_ATTRIBUTE . ELEMENTO_CONTEUDO . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->ordem) || empty($this->ordem)) {
					$this->setError(THE_ATTRIBUTE . ORDEM . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->elementosInput) || is_null($this->elementosInput->getId()) || empty($this->elementosInput->getId())) {
					$this->setError(THE_ATTRIBUTE . ELEMENTOS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->situacoes_registrosInput) || is_null($this->situacoes_registrosInput->getId()) || empty($this->situacoes_registrosInput->getId())) {
					$this->setError(THE_ATTRIBUTE . SITUACOES_REGISTROS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->tipos_alinhamentos_horizontaisInput) || is_null($this->tipos_alinhamentos_horizontaisInput->getId()) || empty($this->tipos_alinhamentos_horizontaisInput->getId())) {
					$this->setError(THE_ATTRIBUTE . TIPOS_ALINHAMENTOS_HORIZONTAIS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->tipos_alinhamentos_verticaisInput) || is_null($this->tipos_alinhamentos_verticaisInput->getId()) || empty($this->tipos_alinhamentos_verticaisInput->getId())) {
					$this->setError(THE_ATTRIBUTE . TIPOS_ALINHAMENTOS_VERTICAIS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				return true;
			} else if ($method == PUT) {
				if (is_null($this->id) || empty($this->id)) {
					$this->setError(THE_ATTRIBUTE . ID . IS_REQUIRED);
					return false;					
				} else {
					return true;
				}
			}
		}
		
		public function getEntity() {
			$elemento_conteudos = new model\Elemento_conteudos();
			if (!is_null($this->id)) {
				$elemento_conteudos->setId($this->id);
			}
			if (!is_null($this->elemento_conteudo)) {
				$elemento_conteudos->setElemento_conteudo($this->elemento_conteudo);	
			}
			if (!is_null($this->ordem)) {
				$elemento_conteudos->setOrdem($this->ordem);	
			} 
			$elemento_conteudos->setCadastrado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			$elemento_conteudos->setModificado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			if (!is_null($this->elementosInput)) {
				$elementos = $this->elementosInput->getEntity();
				$elemento_conteudos->setElementos($elementos);
			}
			if (!is_null($this->situacoes_registrosInput)) {
				$situacoes_registros = $this->situacoes_registrosInput->getEntity();
				$elemento_conteudos->setSituacoes_registros($situacoes_registros);
			}
			if (!is_null($this->tipos_alinhamentos_horizontaisInput)) {
				$tipos_alinhamentos_horizontais = $this->tipos_alinhamentos_horizontaisInput->getEntity();
				$elemento_conteudos->setTipos_alinhamentos_horizontais($tipos_alinhamentos_horizontais);
			}
			if (!is_null($this->tipos_alinhamentos_verticaisInput)) {
				$tipos_alinhamentos_verticais = $this->tipos_alinhamentos_verticaisInput->getEntity();
				$elemento_conteudos->setTipos_alinhamentos_verticais($tipos_alinhamentos_verticais);
			}
			return $elemento_conteudos;
		}		
		
	}
	
?>