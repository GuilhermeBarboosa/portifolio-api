<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use lib\getz;
	use src\model;

	class ElementosInput extends getz\Inject {
			
		private $id;
		private $elemento;
		private $ordem;
		private $cadastrado;
		private $modificado;
		private $tipos_linhasInput;
		private $tipos_colunasInput;
		private $situacoes_registrosInput;
		private $coresInput;
			
		private $error;	
			
		public function __construct($request) { 
			if (isset($request[ID])) {
				$this->id = $this->inject($request[ID]);	
			}
			if (isset($request[ELEMENTO])) {
				$this->elemento = $this->inject($request[ELEMENTO]);	
			}
			if (isset($request[ORDEM])) {
				$this->ordem = $this->inject($request[ORDEM]);	
			}
			if (isset($request[CADASTRADO])) {
				$this->cadastrado = $this->inject($request[CADASTRADO]);	
			}
			if (isset($request[MODIFICADO])) {
				$this->modificado = $this->inject($request[MODIFICADO]);	
			}
			if (isset($request[TIPOS_LINHAS_INPUT]) && isset($request[TIPOS_LINHAS_INPUT][ID])) {
				$tipos_linhasInput = new model\Tipos_linhasInput($request[TIPOS_LINHAS_INPUT]);
				$this->tipos_linhasInput = $tipos_linhasInput;	
			}
			if (isset($request[TIPOS_COLUNAS_INPUT]) && isset($request[TIPOS_COLUNAS_INPUT][ID])) {
				$tipos_colunasInput = new model\Tipos_colunasInput($request[TIPOS_COLUNAS_INPUT]);
				$this->tipos_colunasInput = $tipos_colunasInput;	
			}
			if (isset($request[SITUACOES_REGISTROS_INPUT]) && isset($request[SITUACOES_REGISTROS_INPUT][ID])) {
				$situacoes_registrosInput = new model\Situacoes_registrosInput($request[SITUACOES_REGISTROS_INPUT]);
				$this->situacoes_registrosInput = $situacoes_registrosInput;	
			}
			if (isset($request[CORES_INPUT]) && isset($request[CORES_INPUT][ID])) {
				$coresInput = new model\CoresInput($request[CORES_INPUT]);
				$this->coresInput = $coresInput;	
			}
		}
					
		public function getId() {
			return $this->id;
		}
		
		public function setId($id) {
			$this->id = $id;
		}
					
		public function getElemento() {
			return $this->elemento;
		}
		
		public function setElemento($elemento) {
			$this->elemento = $elemento;
		}
					
		public function getOrdem() {
			return $this->ordem;
		}
		
		public function setOrdem($ordem) {
			$this->ordem = $ordem;
		}
					
		public function getCadastrado() {
			return $this->cadastrado;
		}
		
		public function setCadastrado($cadastrado) {
			$this->cadastrado = $cadastrado;
		}
					
		public function getModificado() {
			return $this->modificado;
		}
		
		public function setModificado($modificado) {
			$this->modificado = $modificado;
		}
					
		public function getTipos_linhasInput() {
			return $this->tipos_linhasInput;
		}
		
		public function setTipos_linhasInput($tipos_linhasInput) {
			$this->tipos_linhasInput = $tipos_linhasInput;
		}
					
		public function getTipos_colunasInput() {
			return $this->tipos_colunasInput;
		}
		
		public function setTipos_colunasInput($tipos_colunasInput) {
			$this->tipos_colunasInput = $tipos_colunasInput;
		}
					
		public function getSituacoes_registrosInput() {
			return $this->situacoes_registrosInput;
		}
		
		public function setSituacoes_registrosInput($situacoes_registrosInput) {
			$this->situacoes_registrosInput = $situacoes_registrosInput;
		}
					
		public function getCoresInput() {
			return $this->coresInput;
		}
		
		public function setCoresInput($coresInput) {
			$this->coresInput = $coresInput;
		}	
			
		public function getError() {
			return $this->error;
		}
		
		private function setError($error) {
			$this->error = $error;
		}	

		public function isValid($method) {		
			if ($method == POST) {
				if (is_null($this->elemento) || empty($this->elemento)) {
					$this->setError(THE_ATTRIBUTE . ELEMENTO . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->ordem) || empty($this->ordem)) {
					$this->setError(THE_ATTRIBUTE . ORDEM . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->tipos_linhasInput) || is_null($this->tipos_linhasInput->getId()) || empty($this->tipos_linhasInput->getId())) {
					$this->setError(THE_ATTRIBUTE . TIPOS_LINHAS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->tipos_colunasInput) || is_null($this->tipos_colunasInput->getId()) || empty($this->tipos_colunasInput->getId())) {
					$this->setError(THE_ATTRIBUTE . TIPOS_COLUNAS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->situacoes_registrosInput) || is_null($this->situacoes_registrosInput->getId()) || empty($this->situacoes_registrosInput->getId())) {
					$this->setError(THE_ATTRIBUTE . SITUACOES_REGISTROS_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				if (is_null($this->coresInput) || is_null($this->coresInput->getId()) || empty($this->coresInput->getId())) {
					$this->setError(THE_ATTRIBUTE . CORES_INPUT . DOT . ID . IS_REQUIRED);
					return false;					
				} 
				return true;
			} else if ($method == PUT) {
				if (is_null($this->id) || empty($this->id)) {
					$this->setError(THE_ATTRIBUTE . ID . IS_REQUIRED);
					return false;					
				} else {
					return true;
				}
			}
		}
		
		public function getEntity() {
			$elementos = new model\Elementos();
			if (!is_null($this->id)) {
				$elementos->setId($this->id);
			}
			if (!is_null($this->elemento)) {
				$elementos->setElemento($this->elemento);	
			}
			if (!is_null($this->ordem)) {
				$elementos->setOrdem($this->ordem);	
			} 
			$elementos->setCadastrado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			$elementos->setModificado(date(YMD_HIS, (time() - ONE_HOUR_IN_SECONDS * BRAZILIAN_TIME_ZONE)));
			if (!is_null($this->tipos_linhasInput)) {
				$tipos_linhas = $this->tipos_linhasInput->getEntity();
				$elementos->setTipos_linhas($tipos_linhas);
			}
			if (!is_null($this->tipos_colunasInput)) {
				$tipos_colunas = $this->tipos_colunasInput->getEntity();
				$elementos->setTipos_colunas($tipos_colunas);
			}
			if (!is_null($this->situacoes_registrosInput)) {
				$situacoes_registros = $this->situacoes_registrosInput->getEntity();
				$elementos->setSituacoes_registros($situacoes_registros);
			}
			if (!is_null($this->coresInput)) {
				$cores = $this->coresInput->getEntity();
				$elementos->setCores($cores);
			}
			return $elementos;
		}		
		
	}
	
?>