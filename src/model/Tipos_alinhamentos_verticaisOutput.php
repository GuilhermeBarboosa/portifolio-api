<?php 
			
	/**
	 * Generated by Getz Framework.
	 * 
	 * @author  Mario Sakamoto <mskamot@gmail.com>
	 * @see     https://wtag.com.br/getz
	 * @since   1.0.0
	 * @version 1.0.0	
	 */
	 
	namespace src\model; 
	use src\model;	

	class Tipos_alinhamentos_verticaisOutput implements \JsonSerializable {
			
		private $id;
		private $tipo_alinhamento_vertical;
		private $classe;
		private $cadastrado;
		private $modificado;
			
		public function __construct() { }
					
		public function getId() {
			return $this->id;
		}
		
		public function setId($id) {
			$this->id = $id;
		}
					
		public function getTipo_alinhamento_vertical() {
			return $this->tipo_alinhamento_vertical;
		}
		
		public function setTipo_alinhamento_vertical($tipo_alinhamento_vertical) {
			$this->tipo_alinhamento_vertical = $tipo_alinhamento_vertical;
		}
					
		public function getClasse() {
			return $this->classe;
		}
		
		public function setClasse($classe) {
			$this->classe = $classe;
		}
					
		public function getCadastrado() {
			return $this->cadastrado;
		}
		
		public function setCadastrado($cadastrado) {
			$this->cadastrado = $cadastrado;
		}
					
		public function getModificado() {
			return $this->modificado;
		}
		
		public function setModificado($modificado) {
			$this->modificado = $modificado;
		}

		public function getOutput($tipos_alinhamentos_verticais) {
			if (!is_null($tipos_alinhamentos_verticais)) {
				$tipos_alinhamentos_verticaisOutput = new model\Tipos_alinhamentos_verticaisOutput();
				$tipos_alinhamentos_verticaisOutput->setId($tipos_alinhamentos_verticais->getId());
				$tipos_alinhamentos_verticaisOutput->setTipo_alinhamento_vertical($tipos_alinhamentos_verticais->getTipo_alinhamento_vertical());
				$tipos_alinhamentos_verticaisOutput->setClasse($tipos_alinhamentos_verticais->getClasse());
				return $tipos_alinhamentos_verticaisOutput;
			} else {
				return null;
			}
		}
			
		public function getOutputList($tipos_alinhamentos_verticaisList) {
			$tipos_alinhamentos_verticaisOutputList = array();
			$count = NUMBER_ZERO;
			for ($x = NUMBER_ZERO; $x < sizeof($tipos_alinhamentos_verticaisList); $x++) {
				$tipos_alinhamentos_verticaisOutputList[$count] = $this->getOutput($tipos_alinhamentos_verticaisList[$x]);
				$count++;
			}
			return $tipos_alinhamentos_verticaisOutputList;
		}
		
		public function jsonSerialize() {
			$objectVars = get_object_vars($this);
			return array_filter($objectVars, function ($value) { 
				return $value != null;
			});
		}		
		
	}
	
?>